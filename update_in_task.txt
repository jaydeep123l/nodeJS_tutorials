    today's status
        - Integrated DL OCR API, as previously it was facing issue from AAVAS end..
        - Fixed the POST API for applicant_information (applicant_details, employment_info, etc) as was populating duplicate records
        - Worked On POST, GET API for Required_documents and OCR of cheque in progress..
        - Work in progress for RazorPay Payment gateway, integration



    today's status
    - Completed with POST, GET, DELETE API for Applicant_required_document
    - Using fileHash , If file is duplicate then raise error with check as docType and applicantId 
    - Implemented Model and migration for Applicant_required_document, Payment_info
    - Integration In progress with API for Payment_link_creation, Payment_status_check



    today's status -
    integrated payment API and created payment migration, model
    integrated cheque OCR in required documents and 
    POST API for uploading other required docs over s3, and managed duplicate docs using hash in database
    handle case for document_upload when user uploads any image, rather then KYC images... using key "NO_KYC_DOCUMENT_DETECTED" returned from AAVAS end.. 


    #status
    .....
    1. application progress, added and updated on successfull response of every POST API (OCR, applicant_info, asset_details, etc)..
    2. Applicant Info AutoFill Data Added, in GET API response like (Aadhar No, PAN No, etc) fetched from saved OCR docs data...
    3. Fixed login check for mobile number, when mobile number does not exists..
    4. In required documents GET API added a object for documents to be uploaded, 
        so that frontend input field are dynamically updated, on basis of the customerType, isUserRegisteredForUdhyam etc..
        as it allows option to upload only specific docs on basis of condition..
        For example if customerType is non-individual then input field selfie_photo will not begin rendered.. 
    5. Added an GET API for current Address, and in asset details, if collateralAddressSameAsCurrentAddress is yes then return currentAddress Object so  
        that can be autofilled in frontend, 
        and accordingly updated the Asset Object on POST API hit...


    Added an GET API for current Address, and in asset details, if collateralAddressSameAsCurrentAddress is yes then return currentAddress Object so that can be autofilled in frontend, 
    and accordingly updated the Asset Object on POST API hit...

 
    4. required docs Get API updated, returns a response as
            const requiredDocuments = {
                addressProof: true,
                selfiePhoto: true,
                propertyDocument: true,
                incomeDocument: true,
                bankingProof: true,
                bankCheque: true,       
                udhyamRegisteredCertificate: true,
            }
        map frontend accordingly.
    5. Asset details, when collateral address same as current address..
    6. In Co-Applicant / Applicant 
            employment address was not coming fixed it..
    7. In main Applicant Address,
            added key addressType as told by ankit.. 
    8. JIRA Update..
    

